/* automatically generated by rust-bindgen */

pub const NV_CTRL_TARGET_TYPE_X_SCREEN: u32 = 0;
pub const NV_CTRL_TARGET_TYPE_GPU: u32 = 1;
pub const NV_CTRL_TARGET_TYPE_FRAMELOCK: u32 = 2;
pub const NV_CTRL_TARGET_TYPE_VCSC: u32 = 3;
pub const NV_CTRL_TARGET_TYPE_GVI: u32 = 4;
pub const NV_CTRL_TARGET_TYPE_COOLER: u32 = 5;
pub const NV_CTRL_TARGET_TYPE_THERMAL_SENSOR: u32 = 6;
pub const NV_CTRL_TARGET_TYPE_3D_VISION_PRO_TRANSCEIVER: u32 = 7;
pub const NV_CTRL_TARGET_TYPE_DISPLAY: u32 = 8;
pub const NV_CTRL_FLATPANEL_SCALING: u32 = 2;
pub const NV_CTRL_FLATPANEL_SCALING_DEFAULT: u32 = 0;
pub const NV_CTRL_FLATPANEL_SCALING_NATIVE: u32 = 1;
pub const NV_CTRL_FLATPANEL_SCALING_SCALED: u32 = 2;
pub const NV_CTRL_FLATPANEL_SCALING_CENTERED: u32 = 3;
pub const NV_CTRL_FLATPANEL_SCALING_ASPECT_SCALED: u32 = 4;
pub const NV_CTRL_FLATPANEL_DITHERING: u32 = 3;
pub const NV_CTRL_FLATPANEL_DITHERING_DEFAULT: u32 = 0;
pub const NV_CTRL_FLATPANEL_DITHERING_ENABLED: u32 = 1;
pub const NV_CTRL_FLATPANEL_DITHERING_DISABLED: u32 = 2;
pub const NV_CTRL_DITHERING: u32 = 3;
pub const NV_CTRL_DITHERING_AUTO: u32 = 0;
pub const NV_CTRL_DITHERING_ENABLED: u32 = 1;
pub const NV_CTRL_DITHERING_DISABLED: u32 = 2;
pub const NV_CTRL_DIGITAL_VIBRANCE: u32 = 4;
pub const NV_CTRL_BUS_TYPE: u32 = 5;
pub const NV_CTRL_BUS_TYPE_AGP: u32 = 0;
pub const NV_CTRL_BUS_TYPE_PCI: u32 = 1;
pub const NV_CTRL_BUS_TYPE_PCI_EXPRESS: u32 = 2;
pub const NV_CTRL_BUS_TYPE_INTEGRATED: u32 = 3;
pub const NV_CTRL_TOTAL_GPU_MEMORY: u32 = 6;
pub const NV_CTRL_VIDEO_RAM: u32 = 6;
pub const NV_CTRL_IRQ: u32 = 7;
pub const NV_CTRL_OPERATING_SYSTEM: u32 = 8;
pub const NV_CTRL_OPERATING_SYSTEM_LINUX: u32 = 0;
pub const NV_CTRL_OPERATING_SYSTEM_FREEBSD: u32 = 1;
pub const NV_CTRL_OPERATING_SYSTEM_SUNOS: u32 = 2;
pub const NV_CTRL_SYNC_TO_VBLANK: u32 = 9;
pub const NV_CTRL_SYNC_TO_VBLANK_OFF: u32 = 0;
pub const NV_CTRL_SYNC_TO_VBLANK_ON: u32 = 1;
pub const NV_CTRL_LOG_ANISO: u32 = 10;
pub const NV_CTRL_FSAA_MODE: u32 = 11;
pub const NV_CTRL_FSAA_MODE_NONE: u32 = 0;
pub const NV_CTRL_FSAA_MODE_2x: u32 = 1;
pub const NV_CTRL_FSAA_MODE_2x_5t: u32 = 2;
pub const NV_CTRL_FSAA_MODE_15x15: u32 = 3;
pub const NV_CTRL_FSAA_MODE_2x2: u32 = 4;
pub const NV_CTRL_FSAA_MODE_4x: u32 = 5;
pub const NV_CTRL_FSAA_MODE_4x_9t: u32 = 6;
pub const NV_CTRL_FSAA_MODE_8x: u32 = 7;
pub const NV_CTRL_FSAA_MODE_16x: u32 = 8;
pub const NV_CTRL_FSAA_MODE_8xS: u32 = 9;
pub const NV_CTRL_FSAA_MODE_8xQ: u32 = 10;
pub const NV_CTRL_FSAA_MODE_16xS: u32 = 11;
pub const NV_CTRL_FSAA_MODE_16xQ: u32 = 12;
pub const NV_CTRL_FSAA_MODE_32xS: u32 = 13;
pub const NV_CTRL_FSAA_MODE_32x: u32 = 14;
pub const NV_CTRL_FSAA_MODE_64xS: u32 = 15;
pub const NV_CTRL_FSAA_MODE_MAX: u32 = 15;
pub const NV_CTRL_UBB: u32 = 13;
pub const NV_CTRL_UBB_OFF: u32 = 0;
pub const NV_CTRL_UBB_ON: u32 = 1;
pub const NV_CTRL_OVERLAY: u32 = 14;
pub const NV_CTRL_OVERLAY_OFF: u32 = 0;
pub const NV_CTRL_OVERLAY_ON: u32 = 1;
pub const NV_CTRL_STEREO: u32 = 16;
pub const NV_CTRL_STEREO_OFF: u32 = 0;
pub const NV_CTRL_STEREO_DDC: u32 = 1;
pub const NV_CTRL_STEREO_BLUELINE: u32 = 2;
pub const NV_CTRL_STEREO_DIN: u32 = 3;
pub const NV_CTRL_STEREO_PASSIVE_EYE_PER_DPY: u32 = 4;
pub const NV_CTRL_STEREO_VERTICAL_INTERLACED: u32 = 5;
pub const NV_CTRL_STEREO_COLOR_INTERLACED: u32 = 6;
pub const NV_CTRL_STEREO_HORIZONTAL_INTERLACED: u32 = 7;
pub const NV_CTRL_STEREO_CHECKERBOARD_PATTERN: u32 = 8;
pub const NV_CTRL_STEREO_INVERSE_CHECKERBOARD_PATTERN: u32 = 9;
pub const NV_CTRL_STEREO_3D_VISION: u32 = 10;
pub const NV_CTRL_STEREO_3D_VISION_PRO: u32 = 11;
pub const NV_CTRL_STEREO_HDMI_3D: u32 = 12;
pub const NV_CTRL_STEREO_TRIDELITY_SL: u32 = 13;
pub const NV_CTRL_STEREO_INBAND_STEREO_SIGNALING: u32 = 14;
pub const NV_CTRL_STEREO_MAX: u32 = 14;
pub const NV_CTRL_EMULATE: u32 = 17;
pub const NV_CTRL_EMULATE_NONE: u32 = 0;
pub const NV_CTRL_TWINVIEW: u32 = 18;
pub const NV_CTRL_TWINVIEW_NOT_ENABLED: u32 = 0;
pub const NV_CTRL_TWINVIEW_ENABLED: u32 = 1;
pub const NV_CTRL_CONNECTED_DISPLAYS: u32 = 19;
pub const NV_CTRL_ENABLED_DISPLAYS: u32 = 20;
pub const NV_CTRL_FRAMELOCK: u32 = 21;
pub const NV_CTRL_FRAMELOCK_NOT_SUPPORTED: u32 = 0;
pub const NV_CTRL_FRAMELOCK_SUPPORTED: u32 = 1;
pub const NV_CTRL_FRAMELOCK_MASTER: u32 = 22;
pub const NV_CTRL_FRAMELOCK_MASTER_FALSE: u32 = 0;
pub const NV_CTRL_FRAMELOCK_MASTER_TRUE: u32 = 1;
pub const NV_CTRL_FRAMELOCK_POLARITY: u32 = 23;
pub const NV_CTRL_FRAMELOCK_POLARITY_RISING_EDGE: u32 = 1;
pub const NV_CTRL_FRAMELOCK_POLARITY_FALLING_EDGE: u32 = 2;
pub const NV_CTRL_FRAMELOCK_POLARITY_BOTH_EDGES: u32 = 3;
pub const NV_CTRL_FRAMELOCK_SYNC_DELAY: u32 = 24;
pub const NV_CTRL_FRAMELOCK_SYNC_DELAY_MAX: u32 = 2047;
pub const NV_CTRL_FRAMELOCK_SYNC_DELAY_FACTOR: f64 = 7.81;
pub const NV_CTRL_FRAMELOCK_SYNC_INTERVAL: u32 = 25;
pub const NV_CTRL_FRAMELOCK_PORT0_STATUS: u32 = 26;
pub const NV_CTRL_FRAMELOCK_PORT0_STATUS_INPUT: u32 = 0;
pub const NV_CTRL_FRAMELOCK_PORT0_STATUS_OUTPUT: u32 = 1;
pub const NV_CTRL_FRAMELOCK_PORT1_STATUS: u32 = 27;
pub const NV_CTRL_FRAMELOCK_PORT1_STATUS_INPUT: u32 = 0;
pub const NV_CTRL_FRAMELOCK_PORT1_STATUS_OUTPUT: u32 = 1;
pub const NV_CTRL_FRAMELOCK_HOUSE_STATUS: u32 = 28;
pub const NV_CTRL_FRAMELOCK_HOUSE_STATUS_NOT_DETECTED: u32 = 0;
pub const NV_CTRL_FRAMELOCK_HOUSE_STATUS_DETECTED: u32 = 1;
pub const NV_CTRL_FRAMELOCK_SYNC: u32 = 29;
pub const NV_CTRL_FRAMELOCK_SYNC_DISABLE: u32 = 0;
pub const NV_CTRL_FRAMELOCK_SYNC_ENABLE: u32 = 1;
pub const NV_CTRL_FRAMELOCK_SYNC_READY: u32 = 30;
pub const NV_CTRL_FRAMELOCK_SYNC_READY_FALSE: u32 = 0;
pub const NV_CTRL_FRAMELOCK_SYNC_READY_TRUE: u32 = 1;
pub const NV_CTRL_FRAMELOCK_STEREO_SYNC: u32 = 31;
pub const NV_CTRL_FRAMELOCK_STEREO_SYNC_FALSE: u32 = 0;
pub const NV_CTRL_FRAMELOCK_STEREO_SYNC_TRUE: u32 = 1;
pub const NV_CTRL_FRAMELOCK_TEST_SIGNAL: u32 = 32;
pub const NV_CTRL_FRAMELOCK_TEST_SIGNAL_DISABLE: u32 = 0;
pub const NV_CTRL_FRAMELOCK_TEST_SIGNAL_ENABLE: u32 = 1;
pub const NV_CTRL_FRAMELOCK_ETHERNET_DETECTED: u32 = 33;
pub const NV_CTRL_FRAMELOCK_ETHERNET_DETECTED_NONE: u32 = 0;
pub const NV_CTRL_FRAMELOCK_ETHERNET_DETECTED_PORT0: u32 = 1;
pub const NV_CTRL_FRAMELOCK_ETHERNET_DETECTED_PORT1: u32 = 2;
pub const NV_CTRL_FRAMELOCK_VIDEO_MODE: u32 = 34;
pub const NV_CTRL_FRAMELOCK_VIDEO_MODE_NONE: u32 = 0;
pub const NV_CTRL_FRAMELOCK_VIDEO_MODE_TTL: u32 = 1;
pub const NV_CTRL_FRAMELOCK_VIDEO_MODE_NTSCPALSECAM: u32 = 2;
pub const NV_CTRL_FRAMELOCK_VIDEO_MODE_HDTV: u32 = 3;
pub const NV_CTRL_FRAMELOCK_VIDEO_MODE_COMPOSITE_AUTO: u32 = 0;
pub const NV_CTRL_FRAMELOCK_VIDEO_MODE_COMPOSITE_BI_LEVEL: u32 = 2;
pub const NV_CTRL_FRAMELOCK_VIDEO_MODE_COMPOSITE_TRI_LEVEL: u32 = 3;
pub const NV_CTRL_FRAMELOCK_SYNC_RATE: u32 = 35;
pub const NV_CTRL_FORCE_GENERIC_CPU: u32 = 37;
pub const NV_CTRL_FORCE_GENERIC_CPU_DISABLE: u32 = 0;
pub const NV_CTRL_FORCE_GENERIC_CPU_ENABLE: u32 = 1;
pub const NV_CTRL_OPENGL_AA_LINE_GAMMA: u32 = 38;
pub const NV_CTRL_OPENGL_AA_LINE_GAMMA_DISABLE: u32 = 0;
pub const NV_CTRL_OPENGL_AA_LINE_GAMMA_ENABLE: u32 = 1;
pub const NV_CTRL_FRAMELOCK_TIMING: u32 = 39;
pub const NV_CTRL_FRAMELOCK_TIMING_FALSE: u32 = 0;
pub const NV_CTRL_FRAMELOCK_TIMING_TRUE: u32 = 1;
pub const NV_CTRL_FLIPPING_ALLOWED: u32 = 40;
pub const NV_CTRL_FLIPPING_ALLOWED_FALSE: u32 = 0;
pub const NV_CTRL_FLIPPING_ALLOWED_TRUE: u32 = 1;
pub const NV_CTRL_ARCHITECTURE: u32 = 41;
pub const NV_CTRL_ARCHITECTURE_X86: u32 = 0;
pub const NV_CTRL_ARCHITECTURE_X86_64: u32 = 1;
pub const NV_CTRL_ARCHITECTURE_IA64: u32 = 2;
pub const NV_CTRL_ARCHITECTURE_ARM: u32 = 3;
pub const NV_CTRL_ARCHITECTURE_AARCH64: u32 = 4;
pub const NV_CTRL_ARCHITECTURE_PPC64LE: u32 = 5;
pub const NV_CTRL_TEXTURE_CLAMPING: u32 = 42;
pub const NV_CTRL_TEXTURE_CLAMPING_EDGE: u32 = 0;
pub const NV_CTRL_TEXTURE_CLAMPING_SPEC: u32 = 1;
pub const NV_CTRL_CURSOR_SHADOW: u32 = 43;
pub const NV_CTRL_CURSOR_SHADOW_DISABLE: u32 = 0;
pub const NV_CTRL_CURSOR_SHADOW_ENABLE: u32 = 1;
pub const NV_CTRL_CURSOR_SHADOW_ALPHA: u32 = 44;
pub const NV_CTRL_CURSOR_SHADOW_RED: u32 = 45;
pub const NV_CTRL_CURSOR_SHADOW_GREEN: u32 = 46;
pub const NV_CTRL_CURSOR_SHADOW_BLUE: u32 = 47;
pub const NV_CTRL_CURSOR_SHADOW_X_OFFSET: u32 = 48;
pub const NV_CTRL_CURSOR_SHADOW_Y_OFFSET: u32 = 49;
pub const NV_CTRL_FSAA_APPLICATION_CONTROLLED: u32 = 50;
pub const NV_CTRL_FSAA_APPLICATION_CONTROLLED_ENABLED: u32 = 1;
pub const NV_CTRL_FSAA_APPLICATION_CONTROLLED_DISABLED: u32 = 0;
pub const NV_CTRL_LOG_ANISO_APPLICATION_CONTROLLED: u32 = 51;
pub const NV_CTRL_LOG_ANISO_APPLICATION_CONTROLLED_ENABLED: u32 = 1;
pub const NV_CTRL_LOG_ANISO_APPLICATION_CONTROLLED_DISABLED: u32 = 0;
pub const NV_CTRL_IMAGE_SHARPENING: u32 = 52;
pub const NV_CTRL_TV_OVERSCAN: u32 = 53;
pub const NV_CTRL_TV_FLICKER_FILTER: u32 = 54;
pub const NV_CTRL_TV_BRIGHTNESS: u32 = 55;
pub const NV_CTRL_TV_HUE: u32 = 56;
pub const NV_CTRL_TV_CONTRAST: u32 = 57;
pub const NV_CTRL_TV_SATURATION: u32 = 58;
pub const NV_CTRL_TV_RESET_SETTINGS: u32 = 59;
pub const NV_CTRL_GPU_CORE_TEMPERATURE: u32 = 60;
pub const NV_CTRL_GPU_SLOWDOWN_THRESHOLD: u32 = 61;
pub const NV_CTRL_GPU_CORE_THRESHOLD: u32 = 61;
pub const NV_CTRL_GPU_DEFAULT_CORE_THRESHOLD: u32 = 62;
pub const NV_CTRL_GPU_MAX_CORE_THRESHOLD: u32 = 63;
pub const NV_CTRL_AMBIENT_TEMPERATURE: u32 = 64;
pub const NV_CTRL_PBUFFER_SCANOUT_SUPPORTED: u32 = 65;
pub const NV_CTRL_PBUFFER_SCANOUT_FALSE: u32 = 0;
pub const NV_CTRL_PBUFFER_SCANOUT_TRUE: u32 = 1;
pub const NV_CTRL_PBUFFER_SCANOUT_XID: u32 = 66;
pub const NV_CTRL_GVO_SUPPORTED: u32 = 67;
pub const NV_CTRL_GVO_SUPPORTED_FALSE: u32 = 0;
pub const NV_CTRL_GVO_SUPPORTED_TRUE: u32 = 1;
pub const NV_CTRL_GVO_SYNC_MODE: u32 = 68;
pub const NV_CTRL_GVO_SYNC_MODE_FREE_RUNNING: u32 = 0;
pub const NV_CTRL_GVO_SYNC_MODE_GENLOCK: u32 = 1;
pub const NV_CTRL_GVO_SYNC_MODE_FRAMELOCK: u32 = 2;
pub const NV_CTRL_GVO_SYNC_SOURCE: u32 = 69;
pub const NV_CTRL_GVO_SYNC_SOURCE_COMPOSITE: u32 = 0;
pub const NV_CTRL_GVO_SYNC_SOURCE_SDI: u32 = 1;
pub const NV_CTRL_GVIO_REQUESTED_VIDEO_FORMAT: u32 = 70;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_NONE: u32 = 0;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_487I_59_94_SMPTE259_NTSC: u32 = 1;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_576I_50_00_SMPTE259_PAL: u32 = 2;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_720P_59_94_SMPTE296: u32 = 3;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_720P_60_00_SMPTE296: u32 = 4;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1035I_59_94_SMPTE260: u32 = 5;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1035I_60_00_SMPTE260: u32 = 6;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_50_00_SMPTE295: u32 = 7;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_50_00_SMPTE274: u32 = 8;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_59_94_SMPTE274: u32 = 9;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_60_00_SMPTE274: u32 = 10;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_23_976_SMPTE274: u32 = 11;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_24_00_SMPTE274: u32 = 12;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_25_00_SMPTE274: u32 = 13;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_29_97_SMPTE274: u32 = 14;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_30_00_SMPTE274: u32 = 15;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_720P_50_00_SMPTE296: u32 = 16;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_48_00_SMPTE274: u32 = 17;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_47_96_SMPTE274: u32 = 18;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_720P_30_00_SMPTE296: u32 = 19;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_720P_29_97_SMPTE296: u32 = 20;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_720P_25_00_SMPTE296: u32 = 21;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_720P_24_00_SMPTE296: u32 = 22;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_720P_23_98_SMPTE296: u32 = 23;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080PSF_25_00_SMPTE274: u32 = 24;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080PSF_29_97_SMPTE274: u32 = 25;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080PSF_30_00_SMPTE274: u32 = 26;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080PSF_24_00_SMPTE274: u32 = 27;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080PSF_23_98_SMPTE274: u32 = 28;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048P_30_00_SMPTE372: u32 = 29;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048P_29_97_SMPTE372: u32 = 30;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048I_60_00_SMPTE372: u32 = 31;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048I_59_94_SMPTE372: u32 = 32;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048P_25_00_SMPTE372: u32 = 33;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048I_50_00_SMPTE372: u32 = 34;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048P_24_00_SMPTE372: u32 = 35;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048P_23_98_SMPTE372: u32 = 36;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048I_48_00_SMPTE372: u32 = 37;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048I_47_96_SMPTE372: u32 = 38;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_50_00_3G_LEVEL_A_SMPTE274: u32 = 39;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_59_94_3G_LEVEL_A_SMPTE274: u32 = 40;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_60_00_3G_LEVEL_A_SMPTE274: u32 = 41;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_60_00_3G_LEVEL_B_SMPTE274: u32 = 42;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_60_00_3G_LEVEL_B_SMPTE274: u32 = 43;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048I_60_00_3G_LEVEL_B_SMPTE372: u32 = 44;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_50_00_3G_LEVEL_B_SMPTE274: u32 = 45;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_50_00_3G_LEVEL_B_SMPTE274: u32 = 46;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048I_50_00_3G_LEVEL_B_SMPTE372: u32 = 47;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_30_00_3G_LEVEL_B_SMPTE274: u32 = 48;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048P_30_00_3G_LEVEL_B_SMPTE372: u32 = 49;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_25_00_3G_LEVEL_B_SMPTE274: u32 = 50;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048P_25_00_3G_LEVEL_B_SMPTE372: u32 = 51;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_24_00_3G_LEVEL_B_SMPTE274: u32 = 52;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048P_24_00_3G_LEVEL_B_SMPTE372: u32 = 53;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_48_00_3G_LEVEL_B_SMPTE274: u32 = 54;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048I_48_00_3G_LEVEL_B_SMPTE372: u32 = 55;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_59_94_3G_LEVEL_B_SMPTE274: u32 = 56;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_59_94_3G_LEVEL_B_SMPTE274: u32 = 57;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048I_59_94_3G_LEVEL_B_SMPTE372: u32 = 58;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_29_97_3G_LEVEL_B_SMPTE274: u32 = 59;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048P_29_97_3G_LEVEL_B_SMPTE372: u32 = 60;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080P_23_98_3G_LEVEL_B_SMPTE274: u32 = 61;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048P_23_98_3G_LEVEL_B_SMPTE372: u32 = 62;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_1080I_47_96_3G_LEVEL_B_SMPTE274: u32 = 63;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_2048I_47_96_3G_LEVEL_B_SMPTE372: u32 = 64;
pub const NV_CTRL_GVO_OUTPUT_VIDEO_FORMAT: u32 = 70;
pub const NV_CTRL_GVO_VIDEO_FORMAT_NONE: u32 = 0;
pub const NV_CTRL_GVO_VIDEO_FORMAT_487I_59_94_SMPTE259_NTSC: u32 = 1;
pub const NV_CTRL_GVO_VIDEO_FORMAT_576I_50_00_SMPTE259_PAL: u32 = 2;
pub const NV_CTRL_GVO_VIDEO_FORMAT_720P_59_94_SMPTE296: u32 = 3;
pub const NV_CTRL_GVO_VIDEO_FORMAT_720P_60_00_SMPTE296: u32 = 4;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1035I_59_94_SMPTE260: u32 = 5;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1035I_60_00_SMPTE260: u32 = 6;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080I_50_00_SMPTE295: u32 = 7;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080I_50_00_SMPTE274: u32 = 8;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080I_59_94_SMPTE274: u32 = 9;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080I_60_00_SMPTE274: u32 = 10;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080P_23_976_SMPTE274: u32 = 11;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080P_24_00_SMPTE274: u32 = 12;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080P_25_00_SMPTE274: u32 = 13;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080P_29_97_SMPTE274: u32 = 14;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080P_30_00_SMPTE274: u32 = 15;
pub const NV_CTRL_GVO_VIDEO_FORMAT_720P_50_00_SMPTE296: u32 = 16;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080I_48_00_SMPTE274: u32 = 17;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080I_47_96_SMPTE274: u32 = 18;
pub const NV_CTRL_GVO_VIDEO_FORMAT_720P_30_00_SMPTE296: u32 = 19;
pub const NV_CTRL_GVO_VIDEO_FORMAT_720P_29_97_SMPTE296: u32 = 20;
pub const NV_CTRL_GVO_VIDEO_FORMAT_720P_25_00_SMPTE296: u32 = 21;
pub const NV_CTRL_GVO_VIDEO_FORMAT_720P_24_00_SMPTE296: u32 = 22;
pub const NV_CTRL_GVO_VIDEO_FORMAT_720P_23_98_SMPTE296: u32 = 23;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080PSF_25_00_SMPTE274: u32 = 24;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080PSF_29_97_SMPTE274: u32 = 25;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080PSF_30_00_SMPTE274: u32 = 26;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080PSF_24_00_SMPTE274: u32 = 27;
pub const NV_CTRL_GVO_VIDEO_FORMAT_1080PSF_23_98_SMPTE274: u32 = 28;
pub const NV_CTRL_GVO_VIDEO_FORMAT_2048P_30_00_SMPTE372: u32 = 29;
pub const NV_CTRL_GVO_VIDEO_FORMAT_2048P_29_97_SMPTE372: u32 = 30;
pub const NV_CTRL_GVO_VIDEO_FORMAT_2048I_60_00_SMPTE372: u32 = 31;
pub const NV_CTRL_GVO_VIDEO_FORMAT_2048I_59_94_SMPTE372: u32 = 32;
pub const NV_CTRL_GVO_VIDEO_FORMAT_2048P_25_00_SMPTE372: u32 = 33;
pub const NV_CTRL_GVO_VIDEO_FORMAT_2048I_50_00_SMPTE372: u32 = 34;
pub const NV_CTRL_GVO_VIDEO_FORMAT_2048P_24_00_SMPTE372: u32 = 35;
pub const NV_CTRL_GVO_VIDEO_FORMAT_2048P_23_98_SMPTE372: u32 = 36;
pub const NV_CTRL_GVO_VIDEO_FORMAT_2048I_48_00_SMPTE372: u32 = 37;
pub const NV_CTRL_GVO_VIDEO_FORMAT_2048I_47_96_SMPTE372: u32 = 38;
pub const NV_CTRL_GVIO_DETECTED_VIDEO_FORMAT: u32 = 71;
pub const NV_CTRL_GVO_INPUT_VIDEO_FORMAT: u32 = 71;
pub const NV_CTRL_GVO_DATA_FORMAT: u32 = 72;
pub const NV_CTRL_GVO_DATA_FORMAT_R8G8B8_TO_YCRCB444: u32 = 0;
pub const NV_CTRL_GVO_DATA_FORMAT_R8G8B8A8_TO_YCRCBA4444: u32 = 1;
pub const NV_CTRL_GVO_DATA_FORMAT_R8G8B8Z10_TO_YCRCBZ4444: u32 = 2;
pub const NV_CTRL_GVO_DATA_FORMAT_R8G8B8_TO_YCRCB422: u32 = 3;
pub const NV_CTRL_GVO_DATA_FORMAT_R8G8B8A8_TO_YCRCBA4224: u32 = 4;
pub const NV_CTRL_GVO_DATA_FORMAT_R8G8B8Z10_TO_YCRCBZ4224: u32 = 5;
pub const NV_CTRL_GVO_DATA_FORMAT_R8G8B8_TO_RGB444: u32 = 6;
pub const NV_CTRL_GVO_DATA_FORMAT_X8X8X8_444_PASSTHRU: u32 = 6;
pub const NV_CTRL_GVO_DATA_FORMAT_R8G8B8A8_TO_RGBA4444: u32 = 7;
pub const NV_CTRL_GVO_DATA_FORMAT_X8X8X8A8_4444_PASSTHRU: u32 = 7;
pub const NV_CTRL_GVO_DATA_FORMAT_R8G8B8Z10_TO_RGBZ4444: u32 = 8;
pub const NV_CTRL_GVO_DATA_FORMAT_X8X8X8Z8_4444_PASSTHRU: u32 = 8;
pub const NV_CTRL_GVO_DATA_FORMAT_Y10CR10CB10_TO_YCRCB444: u32 = 9;
pub const NV_CTRL_GVO_DATA_FORMAT_X10X10X10_444_PASSTHRU: u32 = 9;
pub const NV_CTRL_GVO_DATA_FORMAT_Y10CR8CB8_TO_YCRCB444: u32 = 10;
pub const NV_CTRL_GVO_DATA_FORMAT_X10X8X8_444_PASSTHRU: u32 = 10;
pub const NV_CTRL_GVO_DATA_FORMAT_Y10CR8CB8A10_TO_YCRCBA4444: u32 = 11;
pub const NV_CTRL_GVO_DATA_FORMAT_X10X8X8A10_4444_PASSTHRU: u32 = 11;
pub const NV_CTRL_GVO_DATA_FORMAT_Y10CR8CB8Z10_TO_YCRCBZ4444: u32 = 12;
pub const NV_CTRL_GVO_DATA_FORMAT_X10X8X8Z10_4444_PASSTHRU: u32 = 12;
pub const NV_CTRL_GVO_DATA_FORMAT_DUAL_R8G8B8_TO_DUAL_YCRCB422: u32 = 13;
pub const NV_CTRL_GVO_DATA_FORMAT_DUAL_Y8CR8CB8_TO_DUAL_YCRCB422: u32 = 14;
pub const NV_CTRL_GVO_DATA_FORMAT_DUAL_X8X8X8_TO_DUAL_422_PASSTHRU: u32 = 14;
pub const NV_CTRL_GVO_DATA_FORMAT_R10G10B10_TO_YCRCB422: u32 = 15;
pub const NV_CTRL_GVO_DATA_FORMAT_R10G10B10_TO_YCRCB444: u32 = 16;
pub const NV_CTRL_GVO_DATA_FORMAT_Y12CR12CB12_TO_YCRCB444: u32 = 17;
pub const NV_CTRL_GVO_DATA_FORMAT_X12X12X12_444_PASSTHRU: u32 = 17;
pub const NV_CTRL_GVO_DATA_FORMAT_R12G12B12_TO_YCRCB444: u32 = 18;
pub const NV_CTRL_GVO_DATA_FORMAT_X8X8X8_422_PASSTHRU: u32 = 19;
pub const NV_CTRL_GVO_DATA_FORMAT_X8X8X8A8_4224_PASSTHRU: u32 = 20;
pub const NV_CTRL_GVO_DATA_FORMAT_X8X8X8Z8_4224_PASSTHRU: u32 = 21;
pub const NV_CTRL_GVO_DATA_FORMAT_X10X10X10_422_PASSTHRU: u32 = 22;
pub const NV_CTRL_GVO_DATA_FORMAT_X10X8X8_422_PASSTHRU: u32 = 23;
pub const NV_CTRL_GVO_DATA_FORMAT_X10X8X8A10_4224_PASSTHRU: u32 = 24;
pub const NV_CTRL_GVO_DATA_FORMAT_X10X8X8Z10_4224_PASSTHRU: u32 = 25;
pub const NV_CTRL_GVO_DATA_FORMAT_X12X12X12_422_PASSTHRU: u32 = 26;
pub const NV_CTRL_GVO_DATA_FORMAT_R12G12B12_TO_YCRCB422: u32 = 27;
pub const NV_CTRL_GVO_DISPLAY_X_SCREEN: u32 = 73;
pub const NV_CTRL_GVO_DISPLAY_X_SCREEN_ENABLE: u32 = 1;
pub const NV_CTRL_GVO_DISPLAY_X_SCREEN_DISABLE: u32 = 0;
pub const NV_CTRL_GVO_COMPOSITE_SYNC_INPUT_DETECTED: u32 = 74;
pub const NV_CTRL_GVO_COMPOSITE_SYNC_INPUT_DETECTED_FALSE: u32 = 0;
pub const NV_CTRL_GVO_COMPOSITE_SYNC_INPUT_DETECTED_TRUE: u32 = 1;
pub const NV_CTRL_GVO_COMPOSITE_SYNC_INPUT_DETECT_MODE: u32 = 75;
pub const NV_CTRL_GVO_COMPOSITE_SYNC_INPUT_DETECT_MODE_AUTO: u32 = 0;
pub const NV_CTRL_GVO_COMPOSITE_SYNC_INPUT_DETECT_MODE_BI_LEVEL: u32 = 1;
pub const NV_CTRL_GVO_COMPOSITE_SYNC_INPUT_DETECT_MODE_TRI_LEVEL: u32 = 2;
pub const NV_CTRL_GVO_SDI_SYNC_INPUT_DETECTED: u32 = 76;
pub const NV_CTRL_GVO_SDI_SYNC_INPUT_DETECTED_NONE: u32 = 0;
pub const NV_CTRL_GVO_SDI_SYNC_INPUT_DETECTED_HD: u32 = 1;
pub const NV_CTRL_GVO_SDI_SYNC_INPUT_DETECTED_SD: u32 = 2;
pub const NV_CTRL_GVO_VIDEO_OUTPUTS: u32 = 77;
pub const NV_CTRL_GVO_VIDEO_OUTPUTS_NONE: u32 = 0;
pub const NV_CTRL_GVO_VIDEO_OUTPUTS_VIDEO1: u32 = 1;
pub const NV_CTRL_GVO_VIDEO_OUTPUTS_VIDEO2: u32 = 2;
pub const NV_CTRL_GVO_VIDEO_OUTPUTS_VIDEO_BOTH: u32 = 3;
pub const NV_CTRL_GVO_FIRMWARE_VERSION: u32 = 78;
pub const NV_CTRL_GVO_SYNC_DELAY_PIXELS: u32 = 79;
pub const NV_CTRL_GVO_SYNC_DELAY_LINES: u32 = 80;
pub const NV_CTRL_GVO_INPUT_VIDEO_FORMAT_REACQUIRE: u32 = 81;
pub const NV_CTRL_GVO_INPUT_VIDEO_FORMAT_REACQUIRE_FALSE: u32 = 0;
pub const NV_CTRL_GVO_INPUT_VIDEO_FORMAT_REACQUIRE_TRUE: u32 = 1;
pub const NV_CTRL_GVO_GLX_LOCKED: u32 = 82;
pub const NV_CTRL_GVO_GLX_LOCKED_FALSE: u32 = 0;
pub const NV_CTRL_GVO_GLX_LOCKED_TRUE: u32 = 1;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_WIDTH: u32 = 83;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_HEIGHT: u32 = 84;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_REFRESH_RATE: u32 = 85;
pub const NV_CTRL_GVO_VIDEO_FORMAT_WIDTH: u32 = 83;
pub const NV_CTRL_GVO_VIDEO_FORMAT_HEIGHT: u32 = 84;
pub const NV_CTRL_GVO_VIDEO_FORMAT_REFRESH_RATE: u32 = 85;
pub const NV_CTRL_GVO_X_SCREEN_PAN_X: u32 = 86;
pub const NV_CTRL_GVO_X_SCREEN_PAN_Y: u32 = 87;
pub const NV_CTRL_GPU_OVERCLOCKING_STATE: u32 = 88;
pub const NV_CTRL_GPU_OVERCLOCKING_STATE_NONE: u32 = 0;
pub const NV_CTRL_GPU_OVERCLOCKING_STATE_MANUAL: u32 = 1;
pub const NV_CTRL_GPU_2D_CLOCK_FREQS: u32 = 89;
pub const NV_CTRL_GPU_3D_CLOCK_FREQS: u32 = 90;
pub const NV_CTRL_GPU_DEFAULT_2D_CLOCK_FREQS: u32 = 91;
pub const NV_CTRL_GPU_DEFAULT_3D_CLOCK_FREQS: u32 = 92;
pub const NV_CTRL_GPU_CURRENT_CLOCK_FREQS: u32 = 93;
pub const NV_CTRL_GPU_OPTIMAL_CLOCK_FREQS: u32 = 94;
pub const NV_CTRL_GPU_OPTIMAL_CLOCK_FREQS_INVALID: u32 = 0;
pub const NV_CTRL_GPU_OPTIMAL_CLOCK_FREQS_DETECTION: u32 = 95;
pub const NV_CTRL_GPU_OPTIMAL_CLOCK_FREQS_DETECTION_START: u32 = 0;
pub const NV_CTRL_GPU_OPTIMAL_CLOCK_FREQS_DETECTION_CANCEL: u32 = 1;
pub const NV_CTRL_GPU_OPTIMAL_CLOCK_FREQS_DETECTION_STATE: u32 = 96;
pub const NV_CTRL_GPU_OPTIMAL_CLOCK_FREQS_DETECTION_STATE_IDLE: u32 = 0;
pub const NV_CTRL_GPU_OPTIMAL_CLOCK_FREQS_DETECTION_STATE_BUSY: u32 = 1;
pub const NV_CTRL_FLATPANEL_CHIP_LOCATION: u32 = 215;
pub const NV_CTRL_FLATPANEL_CHIP_LOCATION_INTERNAL: u32 = 0;
pub const NV_CTRL_FLATPANEL_CHIP_LOCATION_EXTERNAL: u32 = 1;
pub const NV_CTRL_FLATPANEL_LINK: u32 = 216;
pub const NV_CTRL_FLATPANEL_LINK_SINGLE: u32 = 0;
pub const NV_CTRL_FLATPANEL_LINK_DUAL: u32 = 1;
pub const NV_CTRL_FLATPANEL_LINK_QUAD: u32 = 3;
pub const NV_CTRL_FLATPANEL_SIGNAL: u32 = 217;
pub const NV_CTRL_FLATPANEL_SIGNAL_LVDS: u32 = 0;
pub const NV_CTRL_FLATPANEL_SIGNAL_TMDS: u32 = 1;
pub const NV_CTRL_FLATPANEL_SIGNAL_DISPLAYPORT: u32 = 2;
pub const NV_CTRL_USE_HOUSE_SYNC: u32 = 218;
pub const NV_CTRL_USE_HOUSE_SYNC_DISABLED: u32 = 0;
pub const NV_CTRL_USE_HOUSE_SYNC_INPUT: u32 = 1;
pub const NV_CTRL_USE_HOUSE_SYNC_OUTPUT: u32 = 2;
pub const NV_CTRL_USE_HOUSE_SYNC_FALSE: u32 = 0;
pub const NV_CTRL_USE_HOUSE_SYNC_TRUE: u32 = 1;
pub const NV_CTRL_EDID_AVAILABLE: u32 = 219;
pub const NV_CTRL_EDID_AVAILABLE_FALSE: u32 = 0;
pub const NV_CTRL_EDID_AVAILABLE_TRUE: u32 = 1;
pub const NV_CTRL_FORCE_STEREO: u32 = 220;
pub const NV_CTRL_FORCE_STEREO_FALSE: u32 = 0;
pub const NV_CTRL_FORCE_STEREO_TRUE: u32 = 1;
pub const NV_CTRL_IMAGE_SETTINGS: u32 = 221;
pub const NV_CTRL_IMAGE_SETTINGS_HIGH_QUALITY: u32 = 0;
pub const NV_CTRL_IMAGE_SETTINGS_QUALITY: u32 = 1;
pub const NV_CTRL_IMAGE_SETTINGS_PERFORMANCE: u32 = 2;
pub const NV_CTRL_IMAGE_SETTINGS_HIGH_PERFORMANCE: u32 = 3;
pub const NV_CTRL_XINERAMA: u32 = 222;
pub const NV_CTRL_XINERAMA_OFF: u32 = 0;
pub const NV_CTRL_XINERAMA_ON: u32 = 1;
pub const NV_CTRL_XINERAMA_STEREO: u32 = 223;
pub const NV_CTRL_XINERAMA_STEREO_FALSE: u32 = 0;
pub const NV_CTRL_XINERAMA_STEREO_TRUE: u32 = 1;
pub const NV_CTRL_BUS_RATE: u32 = 224;
pub const NV_CTRL_GPU_PCIE_MAX_LINK_WIDTH: u32 = 224;
pub const NV_CTRL_SHOW_SLI_VISUAL_INDICATOR: u32 = 225;
pub const NV_CTRL_SHOW_SLI_VISUAL_INDICATOR_FALSE: u32 = 0;
pub const NV_CTRL_SHOW_SLI_VISUAL_INDICATOR_TRUE: u32 = 1;
pub const NV_CTRL_XV_SYNC_TO_DISPLAY: u32 = 226;
pub const NV_CTRL_GVIO_REQUESTED_VIDEO_FORMAT2: u32 = 227;
pub const NV_CTRL_GVO_OUTPUT_VIDEO_FORMAT2: u32 = 227;
pub const NV_CTRL_GVO_OVERRIDE_HW_CSC: u32 = 228;
pub const NV_CTRL_GVO_OVERRIDE_HW_CSC_FALSE: u32 = 0;
pub const NV_CTRL_GVO_OVERRIDE_HW_CSC_TRUE: u32 = 1;
pub const NV_CTRL_GVO_CAPABILITIES: u32 = 229;
pub const NV_CTRL_GVO_CAPABILITIES_APPLY_CSC_IMMEDIATELY: u32 = 1;
pub const NV_CTRL_GVO_CAPABILITIES_APPLY_CSC_TO_X_SCREEN: u32 = 2;
pub const NV_CTRL_GVO_CAPABILITIES_COMPOSITE_TERMINATION: u32 = 4;
pub const NV_CTRL_GVO_CAPABILITIES_SHARED_SYNC_BNC: u32 = 8;
pub const NV_CTRL_GVO_CAPABILITIES_MULTIRATE_SYNC: u32 = 16;
pub const NV_CTRL_GVO_CAPABILITIES_ADVANCE_SYNC_SKEW: u32 = 32;
pub const NV_CTRL_GVO_COMPOSITE_TERMINATION: u32 = 230;
pub const NV_CTRL_GVO_COMPOSITE_TERMINATION_ENABLE: u32 = 1;
pub const NV_CTRL_GVO_COMPOSITE_TERMINATION_DISABLE: u32 = 0;
pub const NV_CTRL_ASSOCIATED_DISPLAY_DEVICES: u32 = 231;
pub const NV_CTRL_FRAMELOCK_SLAVES: u32 = 232;
pub const NV_CTRL_FRAMELOCK_MASTERABLE: u32 = 233;
pub const NV_CTRL_PROBE_DISPLAYS: u32 = 234;
pub const NV_CTRL_REFRESH_RATE: u32 = 235;
pub const NV_CTRL_GVO_FLIP_QUEUE_SIZE: u32 = 236;
pub const NV_CTRL_CURRENT_SCANLINE: u32 = 237;
pub const NV_CTRL_INITIAL_PIXMAP_PLACEMENT: u32 = 238;
pub const NV_CTRL_INITIAL_PIXMAP_PLACEMENT_FORCE_SYSMEM: u32 = 0;
pub const NV_CTRL_INITIAL_PIXMAP_PLACEMENT_SYSMEM: u32 = 1;
pub const NV_CTRL_INITIAL_PIXMAP_PLACEMENT_VIDMEM: u32 = 2;
pub const NV_CTRL_INITIAL_PIXMAP_PLACEMENT_RESERVED: u32 = 3;
pub const NV_CTRL_INITIAL_PIXMAP_PLACEMENT_GPU_SYSMEM: u32 = 4;
pub const NV_CTRL_PCI_BUS: u32 = 239;
pub const NV_CTRL_PCI_DEVICE: u32 = 240;
pub const NV_CTRL_PCI_FUNCTION: u32 = 241;
pub const NV_CTRL_FRAMELOCK_FPGA_REVISION: u32 = 242;
pub const NV_CTRL_MAX_SCREEN_WIDTH: u32 = 243;
pub const NV_CTRL_MAX_SCREEN_HEIGHT: u32 = 244;
pub const NV_CTRL_MAX_DISPLAYS: u32 = 245;
pub const NV_CTRL_DYNAMIC_TWINVIEW: u32 = 246;
pub const NV_CTRL_MULTIGPU_DISPLAY_OWNER: u32 = 247;
pub const NV_CTRL_GPU_SCALING: u32 = 248;
pub const NV_CTRL_GPU_SCALING_TARGET_INVALID: u32 = 0;
pub const NV_CTRL_GPU_SCALING_TARGET_FLATPANEL_BEST_FIT: u32 = 1;
pub const NV_CTRL_GPU_SCALING_TARGET_FLATPANEL_NATIVE: u32 = 2;
pub const NV_CTRL_GPU_SCALING_METHOD_INVALID: u32 = 0;
pub const NV_CTRL_GPU_SCALING_METHOD_STRETCHED: u32 = 1;
pub const NV_CTRL_GPU_SCALING_METHOD_CENTERED: u32 = 2;
pub const NV_CTRL_GPU_SCALING_METHOD_ASPECT_SCALED: u32 = 3;
pub const NV_CTRL_FRONTEND_RESOLUTION: u32 = 249;
pub const NV_CTRL_BACKEND_RESOLUTION: u32 = 250;
pub const NV_CTRL_FLATPANEL_NATIVE_RESOLUTION: u32 = 251;
pub const NV_CTRL_FLATPANEL_BEST_FIT_RESOLUTION: u32 = 252;
pub const NV_CTRL_GPU_SCALING_ACTIVE: u32 = 253;
pub const NV_CTRL_DFP_SCALING_ACTIVE: u32 = 254;
pub const NV_CTRL_FSAA_APPLICATION_ENHANCED: u32 = 255;
pub const NV_CTRL_FSAA_APPLICATION_ENHANCED_ENABLED: u32 = 1;
pub const NV_CTRL_FSAA_APPLICATION_ENHANCED_DISABLED: u32 = 0;
pub const NV_CTRL_FRAMELOCK_SYNC_RATE_4: u32 = 256;
pub const NV_CTRL_GVO_LOCK_OWNER: u32 = 257;
pub const NV_CTRL_GVO_LOCK_OWNER_NONE: u32 = 0;
pub const NV_CTRL_GVO_LOCK_OWNER_GLX: u32 = 1;
pub const NV_CTRL_GVO_LOCK_OWNER_CLONE: u32 = 2;
pub const NV_CTRL_GVO_LOCK_OWNER_X_SCREEN: u32 = 3;
pub const NV_CTRL_HWOVERLAY: u32 = 258;
pub const NV_CTRL_HWOVERLAY_FALSE: u32 = 0;
pub const NV_CTRL_HWOVERLAY_TRUE: u32 = 1;
pub const NV_CTRL_NUM_GPU_ERRORS_RECOVERED: u32 = 259;
pub const NV_CTRL_REFRESH_RATE_3: u32 = 260;
pub const NV_CTRL_ONDEMAND_VBLANK_INTERRUPTS: u32 = 261;
pub const NV_CTRL_ONDEMAND_VBLANK_INTERRUPTS_OFF: u32 = 0;
pub const NV_CTRL_ONDEMAND_VBLANK_INTERRUPTS_ON: u32 = 1;
pub const NV_CTRL_GPU_POWER_SOURCE: u32 = 262;
pub const NV_CTRL_GPU_POWER_SOURCE_AC: u32 = 0;
pub const NV_CTRL_GPU_POWER_SOURCE_BATTERY: u32 = 1;
pub const NV_CTRL_GPU_CURRENT_PERFORMANCE_MODE: u32 = 263;
pub const NV_CTRL_GPU_CURRENT_PERFORMANCE_MODE_DESKTOP: u32 = 0;
pub const NV_CTRL_GPU_CURRENT_PERFORMANCE_MODE_MAXPERF: u32 = 1;
pub const NV_CTRL_GLYPH_CACHE: u32 = 264;
pub const NV_CTRL_GLYPH_CACHE_DISABLED: u32 = 0;
pub const NV_CTRL_GLYPH_CACHE_ENABLED: u32 = 1;
pub const NV_CTRL_GPU_CURRENT_PERFORMANCE_LEVEL: u32 = 265;
pub const NV_CTRL_GPU_ADAPTIVE_CLOCK_STATE: u32 = 266;
pub const NV_CTRL_GPU_ADAPTIVE_CLOCK_STATE_DISABLED: u32 = 0;
pub const NV_CTRL_GPU_ADAPTIVE_CLOCK_STATE_ENABLED: u32 = 1;
pub const NV_CTRL_GVO_OUTPUT_VIDEO_LOCKED: u32 = 267;
pub const NV_CTRL_GVO_OUTPUT_VIDEO_LOCKED_FALSE: u32 = 0;
pub const NV_CTRL_GVO_OUTPUT_VIDEO_LOCKED_TRUE: u32 = 1;
pub const NV_CTRL_GVO_SYNC_LOCK_STATUS: u32 = 268;
pub const NV_CTRL_GVO_SYNC_LOCK_STATUS_UNLOCKED: u32 = 0;
pub const NV_CTRL_GVO_SYNC_LOCK_STATUS_LOCKED: u32 = 1;
pub const NV_CTRL_GVO_ANC_TIME_CODE_GENERATION: u32 = 269;
pub const NV_CTRL_GVO_ANC_TIME_CODE_GENERATION_DISABLE: u32 = 0;
pub const NV_CTRL_GVO_ANC_TIME_CODE_GENERATION_ENABLE: u32 = 1;
pub const NV_CTRL_GVO_COMPOSITE: u32 = 270;
pub const NV_CTRL_GVO_COMPOSITE_DISABLE: u32 = 0;
pub const NV_CTRL_GVO_COMPOSITE_ENABLE: u32 = 1;
pub const NV_CTRL_GVO_COMPOSITE_ALPHA_KEY: u32 = 271;
pub const NV_CTRL_GVO_COMPOSITE_ALPHA_KEY_DISABLE: u32 = 0;
pub const NV_CTRL_GVO_COMPOSITE_ALPHA_KEY_ENABLE: u32 = 1;
pub const NV_CTRL_GVO_COMPOSITE_LUMA_KEY_RANGE: u32 = 272;
pub const NV_CTRL_GVO_COMPOSITE_CR_KEY_RANGE: u32 = 273;
pub const NV_CTRL_GVO_COMPOSITE_CB_KEY_RANGE: u32 = 274;
pub const NV_CTRL_GVO_COMPOSITE_NUM_KEY_RANGES: u32 = 275;
pub const NV_CTRL_SWITCH_TO_DISPLAYS: u32 = 276;
pub const NV_CTRL_NOTEBOOK_DISPLAY_CHANGE_LID_EVENT: u32 = 277;
pub const NV_CTRL_NOTEBOOK_INTERNAL_LCD: u32 = 278;
pub const NV_CTRL_DEPTH_30_ALLOWED: u32 = 279;
pub const NV_CTRL_MODE_SET_EVENT: u32 = 280;
pub const NV_CTRL_OPENGL_AA_LINE_GAMMA_VALUE: u32 = 281;
pub const NV_CTRL_VCSC_HIGH_PERF_MODE: u32 = 282;
pub const NV_CTRL_DISPLAYPORT_LINK_RATE: u32 = 291;
pub const NV_CTRL_DISPLAYPORT_LINK_RATE_DISABLED: u32 = 0;
pub const NV_CTRL_DISPLAYPORT_LINK_RATE_1_62GBPS: u32 = 6;
pub const NV_CTRL_DISPLAYPORT_LINK_RATE_2_70GBPS: u32 = 10;
pub const NV_CTRL_STEREO_EYES_EXCHANGE: u32 = 292;
pub const NV_CTRL_STEREO_EYES_EXCHANGE_OFF: u32 = 0;
pub const NV_CTRL_STEREO_EYES_EXCHANGE_ON: u32 = 1;
pub const NV_CTRL_NO_SCANOUT: u32 = 293;
pub const NV_CTRL_NO_SCANOUT_DISABLED: u32 = 0;
pub const NV_CTRL_NO_SCANOUT_ENABLED: u32 = 1;
pub const NV_CTRL_GVO_CSC_CHANGED_EVENT: u32 = 294;
pub const NV_CTRL_FRAMELOCK_SLAVEABLE: u32 = 295;
pub const NV_CTRL_GVO_SYNC_TO_DISPLAY: u32 = 296;
pub const NV_CTRL_GVO_SYNC_TO_DISPLAY_DISABLE: u32 = 0;
pub const NV_CTRL_GVO_SYNC_TO_DISPLAY_ENABLE: u32 = 1;
pub const NV_CTRL_X_SERVER_UNIQUE_ID: u32 = 297;
pub const NV_CTRL_PIXMAP_CACHE: u32 = 298;
pub const NV_CTRL_PIXMAP_CACHE_DISABLE: u32 = 0;
pub const NV_CTRL_PIXMAP_CACHE_ENABLE: u32 = 1;
pub const NV_CTRL_PIXMAP_CACHE_ROUNDING_SIZE_KB: u32 = 299;
pub const NV_CTRL_IS_GVO_DISPLAY: u32 = 300;
pub const NV_CTRL_IS_GVO_DISPLAY_FALSE: u32 = 0;
pub const NV_CTRL_IS_GVO_DISPLAY_TRUE: u32 = 1;
pub const NV_CTRL_PCI_ID: u32 = 301;
pub const NV_CTRL_GVO_FULL_RANGE_COLOR: u32 = 302;
pub const NV_CTRL_GVO_FULL_RANGE_COLOR_DISABLED: u32 = 0;
pub const NV_CTRL_GVO_FULL_RANGE_COLOR_ENABLED: u32 = 1;
pub const NV_CTRL_SLI_MOSAIC_MODE_AVAILABLE: u32 = 303;
pub const NV_CTRL_SLI_MOSAIC_MODE_AVAILABLE_FALSE: u32 = 0;
pub const NV_CTRL_SLI_MOSAIC_MODE_AVAILABLE_TRUE: u32 = 1;
pub const NV_CTRL_GVO_ENABLE_RGB_DATA: u32 = 304;
pub const NV_CTRL_GVO_ENABLE_RGB_DATA_DISABLE: u32 = 0;
pub const NV_CTRL_GVO_ENABLE_RGB_DATA_ENABLE: u32 = 1;
pub const NV_CTRL_IMAGE_SHARPENING_DEFAULT: u32 = 305;
pub const NV_CTRL_PCI_DOMAIN: u32 = 306;
pub const NV_CTRL_GVI_NUM_JACKS: u32 = 307;
pub const NV_CTRL_GVI_MAX_LINKS_PER_STREAM: u32 = 308;
pub const NV_CTRL_GVI_DETECTED_CHANNEL_BITS_PER_COMPONENT: u32 = 309;
pub const NV_CTRL_GVI_BITS_PER_COMPONENT_UNKNOWN: u32 = 0;
pub const NV_CTRL_GVI_BITS_PER_COMPONENT_8: u32 = 1;
pub const NV_CTRL_GVI_BITS_PER_COMPONENT_10: u32 = 2;
pub const NV_CTRL_GVI_BITS_PER_COMPONENT_12: u32 = 3;
pub const NV_CTRL_GVI_REQUESTED_STREAM_BITS_PER_COMPONENT: u32 = 310;
pub const NV_CTRL_GVI_DETECTED_CHANNEL_COMPONENT_SAMPLING: u32 = 311;
pub const NV_CTRL_GVI_COMPONENT_SAMPLING_UNKNOWN: u32 = 0;
pub const NV_CTRL_GVI_COMPONENT_SAMPLING_4444: u32 = 1;
pub const NV_CTRL_GVI_COMPONENT_SAMPLING_4224: u32 = 2;
pub const NV_CTRL_GVI_COMPONENT_SAMPLING_444: u32 = 3;
pub const NV_CTRL_GVI_COMPONENT_SAMPLING_422: u32 = 4;
pub const NV_CTRL_GVI_COMPONENT_SAMPLING_420: u32 = 5;
pub const NV_CTRL_GVI_REQUESTED_STREAM_COMPONENT_SAMPLING: u32 = 312;
pub const NV_CTRL_GVI_REQUESTED_STREAM_CHROMA_EXPAND: u32 = 313;
pub const NV_CTRL_GVI_CHROMA_EXPAND_FALSE: u32 = 0;
pub const NV_CTRL_GVI_CHROMA_EXPAND_TRUE: u32 = 1;
pub const NV_CTRL_GVI_DETECTED_CHANNEL_COLOR_SPACE: u32 = 314;
pub const NV_CTRL_GVI_COLOR_SPACE_UNKNOWN: u32 = 0;
pub const NV_CTRL_GVI_COLOR_SPACE_GBR: u32 = 1;
pub const NV_CTRL_GVI_COLOR_SPACE_GBRA: u32 = 2;
pub const NV_CTRL_GVI_COLOR_SPACE_GBRD: u32 = 3;
pub const NV_CTRL_GVI_COLOR_SPACE_YCBCR: u32 = 4;
pub const NV_CTRL_GVI_COLOR_SPACE_YCBCRA: u32 = 5;
pub const NV_CTRL_GVI_COLOR_SPACE_YCBCRD: u32 = 6;
pub const NV_CTRL_GVI_DETECTED_CHANNEL_LINK_ID: u32 = 315;
pub const NV_CTRL_GVI_LINK_ID_UNKNOWN: u32 = 65535;
pub const NV_CTRL_GVI_DETECTED_CHANNEL_SMPTE352_IDENTIFIER: u32 = 316;
pub const NV_CTRL_GVI_GLOBAL_IDENTIFIER: u32 = 317;
pub const NV_CTRL_FRAMELOCK_SYNC_DELAY_RESOLUTION: u32 = 318;
pub const NV_CTRL_GPU_COOLER_MANUAL_CONTROL: u32 = 319;
pub const NV_CTRL_GPU_COOLER_MANUAL_CONTROL_FALSE: u32 = 0;
pub const NV_CTRL_GPU_COOLER_MANUAL_CONTROL_TRUE: u32 = 1;
pub const NV_CTRL_THERMAL_COOLER_LEVEL: u32 = 320;
pub const NV_CTRL_THERMAL_COOLER_LEVEL_SET_DEFAULT: u32 = 321;
pub const NV_CTRL_THERMAL_COOLER_CONTROL_TYPE: u32 = 322;
pub const NV_CTRL_THERMAL_COOLER_CONTROL_TYPE_NONE: u32 = 0;
pub const NV_CTRL_THERMAL_COOLER_CONTROL_TYPE_TOGGLE: u32 = 1;
pub const NV_CTRL_THERMAL_COOLER_CONTROL_TYPE_VARIABLE: u32 = 2;
pub const NV_CTRL_THERMAL_COOLER_TARGET: u32 = 323;
pub const NV_CTRL_THERMAL_COOLER_TARGET_NONE: u32 = 0;
pub const NV_CTRL_THERMAL_COOLER_TARGET_GPU: u32 = 1;
pub const NV_CTRL_THERMAL_COOLER_TARGET_MEMORY: u32 = 2;
pub const NV_CTRL_THERMAL_COOLER_TARGET_POWER_SUPPLY: u32 = 4;
pub const NV_CTRL_THERMAL_COOLER_TARGET_GPU_RELATED: u32 = 7;
pub const NV_CTRL_GPU_ECC_SUPPORTED: u32 = 324;
pub const NV_CTRL_GPU_ECC_SUPPORTED_FALSE: u32 = 0;
pub const NV_CTRL_GPU_ECC_SUPPORTED_TRUE: u32 = 1;
pub const NV_CTRL_GPU_ECC_STATUS: u32 = 325;
pub const NV_CTRL_GPU_ECC_STATUS_DISABLED: u32 = 0;
pub const NV_CTRL_GPU_ECC_STATUS_ENABLED: u32 = 1;
pub const NV_CTRL_GPU_ECC_CONFIGURATION_SUPPORTED: u32 = 326;
pub const NV_CTRL_GPU_ECC_CONFIGURATION_SUPPORTED_FALSE: u32 = 0;
pub const NV_CTRL_GPU_ECC_CONFIGURATION_SUPPORTED_TRUE: u32 = 1;
pub const NV_CTRL_GPU_ECC_CONFIGURATION: u32 = 327;
pub const NV_CTRL_GPU_ECC_CONFIGURATION_DISABLED: u32 = 0;
pub const NV_CTRL_GPU_ECC_CONFIGURATION_ENABLED: u32 = 1;
pub const NV_CTRL_GPU_ECC_DEFAULT_CONFIGURATION: u32 = 328;
pub const NV_CTRL_GPU_ECC_DEFAULT_CONFIGURATION_DISABLED: u32 = 0;
pub const NV_CTRL_GPU_ECC_DEFAULT_CONFIGURATION_ENABLED: u32 = 1;
pub const NV_CTRL_GPU_ECC_SINGLE_BIT_ERRORS: u32 = 329;
pub const NV_CTRL_GPU_ECC_DOUBLE_BIT_ERRORS: u32 = 330;
pub const NV_CTRL_GPU_ECC_AGGREGATE_SINGLE_BIT_ERRORS: u32 = 331;
pub const NV_CTRL_GPU_ECC_AGGREGATE_DOUBLE_BIT_ERRORS: u32 = 332;
pub const NV_CTRL_GPU_ECC_RESET_ERROR_STATUS: u32 = 333;
pub const NV_CTRL_GPU_ECC_RESET_ERROR_STATUS_VOLATILE: u32 = 1;
pub const NV_CTRL_GPU_ECC_RESET_ERROR_STATUS_AGGREGATE: u32 = 2;
pub const NV_CTRL_GPU_POWER_MIZER_MODE: u32 = 334;
pub const NV_CTRL_GPU_POWER_MIZER_MODE_ADAPTIVE: u32 = 0;
pub const NV_CTRL_GPU_POWER_MIZER_MODE_PREFER_MAXIMUM_PERFORMANCE: u32 = 1;
pub const NV_CTRL_GPU_POWER_MIZER_MODE_AUTO: u32 = 2;
pub const NV_CTRL_GPU_POWER_MIZER_MODE_PREFER_CONSISTENT_PERFORMANCE: u32 = 3;
pub const NV_CTRL_GVI_SYNC_OUTPUT_FORMAT: u32 = 335;
pub const NV_CTRL_GVI_MAX_CHANNELS_PER_JACK: u32 = 336;
pub const NV_CTRL_GVI_MAX_STREAMS: u32 = 337;
pub const NV_CTRL_GVI_NUM_CAPTURE_SURFACES: u32 = 338;
pub const NV_CTRL_OVERSCAN_COMPENSATION: u32 = 339;
pub const NV_CTRL_GPU_PCIE_GENERATION: u32 = 341;
pub const NV_CTRL_GPU_PCIE_GENERATION1: u32 = 1;
pub const NV_CTRL_GPU_PCIE_GENERATION2: u32 = 2;
pub const NV_CTRL_GPU_PCIE_GENERATION3: u32 = 3;
pub const NV_CTRL_GVI_BOUND_GPU: u32 = 342;
pub const NV_CTRL_GVIO_REQUESTED_VIDEO_FORMAT3: u32 = 343;
pub const NV_CTRL_ACCELERATE_TRAPEZOIDS: u32 = 344;
pub const NV_CTRL_ACCELERATE_TRAPEZOIDS_DISABLE: u32 = 0;
pub const NV_CTRL_ACCELERATE_TRAPEZOIDS_ENABLE: u32 = 1;
pub const NV_CTRL_GPU_CORES: u32 = 345;
pub const NV_CTRL_GPU_MEMORY_BUS_WIDTH: u32 = 346;
pub const NV_CTRL_GVI_TEST_MODE: u32 = 347;
pub const NV_CTRL_GVI_TEST_MODE_DISABLE: u32 = 0;
pub const NV_CTRL_GVI_TEST_MODE_ENABLE: u32 = 1;
pub const NV_CTRL_COLOR_SPACE: u32 = 348;
pub const NV_CTRL_COLOR_SPACE_RGB: u32 = 0;
pub const NV_CTRL_COLOR_SPACE_YCbCr422: u32 = 1;
pub const NV_CTRL_COLOR_SPACE_YCbCr444: u32 = 2;
pub const NV_CTRL_COLOR_RANGE: u32 = 349;
pub const NV_CTRL_COLOR_RANGE_FULL: u32 = 0;
pub const NV_CTRL_COLOR_RANGE_LIMITED: u32 = 1;
pub const NV_CTRL_GPU_SCALING_DEFAULT_TARGET: u32 = 350;
pub const NV_CTRL_GPU_SCALING_DEFAULT_METHOD: u32 = 351;
pub const NV_CTRL_DITHERING_MODE: u32 = 352;
pub const NV_CTRL_DITHERING_MODE_AUTO: u32 = 0;
pub const NV_CTRL_DITHERING_MODE_DYNAMIC_2X2: u32 = 1;
pub const NV_CTRL_DITHERING_MODE_STATIC_2X2: u32 = 2;
pub const NV_CTRL_DITHERING_MODE_TEMPORAL: u32 = 3;
pub const NV_CTRL_CURRENT_DITHERING: u32 = 353;
pub const NV_CTRL_CURRENT_DITHERING_DISABLED: u32 = 0;
pub const NV_CTRL_CURRENT_DITHERING_ENABLED: u32 = 1;
pub const NV_CTRL_CURRENT_DITHERING_MODE: u32 = 354;
pub const NV_CTRL_CURRENT_DITHERING_MODE_NONE: u32 = 0;
pub const NV_CTRL_CURRENT_DITHERING_MODE_DYNAMIC_2X2: u32 = 1;
pub const NV_CTRL_CURRENT_DITHERING_MODE_STATIC_2X2: u32 = 2;
pub const NV_CTRL_CURRENT_DITHERING_MODE_TEMPORAL: u32 = 3;
pub const NV_CTRL_THERMAL_SENSOR_READING: u32 = 355;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER: u32 = 356;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_NONE: u32 = 0;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_GPU_INTERNAL: u32 = 1;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_ADM1032: u32 = 2;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_ADT7461: u32 = 3;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_MAX6649: u32 = 4;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_MAX1617: u32 = 5;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_LM99: u32 = 6;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_LM89: u32 = 7;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_LM64: u32 = 8;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_G781: u32 = 9;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_ADT7473: u32 = 10;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_SBMAX6649: u32 = 11;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_VBIOSEVT: u32 = 12;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_OS: u32 = 13;
pub const NV_CTRL_THERMAL_SENSOR_PROVIDER_UNKNOWN: u32 = 4294967295;
pub const NV_CTRL_THERMAL_SENSOR_TARGET: u32 = 357;
pub const NV_CTRL_THERMAL_SENSOR_TARGET_NONE: u32 = 0;
pub const NV_CTRL_THERMAL_SENSOR_TARGET_GPU: u32 = 1;
pub const NV_CTRL_THERMAL_SENSOR_TARGET_MEMORY: u32 = 2;
pub const NV_CTRL_THERMAL_SENSOR_TARGET_POWER_SUPPLY: u32 = 4;
pub const NV_CTRL_THERMAL_SENSOR_TARGET_BOARD: u32 = 8;
pub const NV_CTRL_THERMAL_SENSOR_TARGET_UNKNOWN: u32 = 4294967295;
pub const NV_CTRL_SHOW_MULTIGPU_VISUAL_INDICATOR: u32 = 358;
pub const NV_CTRL_SHOW_MULTIGPU_VISUAL_INDICATOR_FALSE: u32 = 0;
pub const NV_CTRL_SHOW_MULTIGPU_VISUAL_INDICATOR_TRUE: u32 = 1;
pub const NV_CTRL_GPU_CURRENT_PROCESSOR_CLOCK_FREQS: u32 = 359;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_FLAGS: u32 = 360;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_FLAGS_NONE: u32 = 0;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_FLAGS_INTERLACED: u32 = 1;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_FLAGS_PROGRESSIVE: u32 = 2;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_FLAGS_PSF: u32 = 4;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_FLAGS_3G_LEVEL_A: u32 = 8;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_FLAGS_3G_LEVEL_B: u32 = 16;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_FLAGS_3G: u32 = 24;
pub const NV_CTRL_GVIO_VIDEO_FORMAT_FLAGS_3G_1080P_NO_12BPC: u32 = 32;
pub const NV_CTRL_GPU_PCIE_MAX_LINK_SPEED: u32 = 361;
pub const NV_CTRL_3D_VISION_PRO_RESET_TRANSCEIVER_TO_FACTORY_SETTINGS: u32 = 363;
pub const NV_CTRL_3D_VISION_PRO_TRANSCEIVER_CHANNEL: u32 = 364;
pub const NV_CTRL_3D_VISION_PRO_TRANSCEIVER_MODE: u32 = 365;
pub const NV_CTRL_3D_VISION_PRO_TRANSCEIVER_MODE_INVALID: u32 = 0;
pub const NV_CTRL_3D_VISION_PRO_TRANSCEIVER_MODE_LOW_RANGE: u32 = 1;
pub const NV_CTRL_3D_VISION_PRO_TRANSCEIVER_MODE_MEDIUM_RANGE: u32 = 2;
pub const NV_CTRL_3D_VISION_PRO_TRANSCEIVER_MODE_HIGH_RANGE: u32 = 3;
pub const NV_CTRL_3D_VISION_PRO_TRANSCEIVER_MODE_COUNT: u32 = 4;
pub const NV_CTRL_SYNCHRONOUS_PALETTE_UPDATES: u32 = 367;
pub const NV_CTRL_SYNCHRONOUS_PALETTE_UPDATES_DISABLE: u32 = 0;
pub const NV_CTRL_SYNCHRONOUS_PALETTE_UPDATES_ENABLE: u32 = 1;
pub const NV_CTRL_DITHERING_DEPTH: u32 = 368;
pub const NV_CTRL_DITHERING_DEPTH_AUTO: u32 = 0;
pub const NV_CTRL_DITHERING_DEPTH_6_BITS: u32 = 1;
pub const NV_CTRL_DITHERING_DEPTH_8_BITS: u32 = 2;
pub const NV_CTRL_CURRENT_DITHERING_DEPTH: u32 = 369;
pub const NV_CTRL_CURRENT_DITHERING_DEPTH_NONE: u32 = 0;
pub const NV_CTRL_CURRENT_DITHERING_DEPTH_6_BITS: u32 = 1;
pub const NV_CTRL_CURRENT_DITHERING_DEPTH_8_BITS: u32 = 2;
pub const NV_CTRL_3D_VISION_PRO_TRANSCEIVER_CHANNEL_FREQUENCY: u32 = 370;
pub const NV_CTRL_3D_VISION_PRO_TRANSCEIVER_CHANNEL_QUALITY: u32 = 371;
pub const NV_CTRL_3D_VISION_PRO_TRANSCEIVER_CHANNEL_COUNT: u32 = 372;
pub const NV_CTRL_3D_VISION_PRO_PAIR_GLASSES: u32 = 373;
pub const NV_CTRL_3D_VISION_PRO_PAIR_GLASSES_STOP: u32 = 0;
pub const NV_CTRL_3D_VISION_PRO_PAIR_GLASSES_BEACON: u32 = 4294967295;
pub const NV_CTRL_3D_VISION_PRO_UNPAIR_GLASSES: u32 = 374;
pub const NV_CTRL_3D_VISION_PRO_DISCOVER_GLASSES: u32 = 375;
pub const NV_CTRL_3D_VISION_PRO_IDENTIFY_GLASSES: u32 = 376;
pub const NV_CTRL_3D_VISION_PRO_GLASSES_SYNC_CYCLE: u32 = 378;
pub const NV_CTRL_3D_VISION_PRO_GLASSES_MISSED_SYNC_CYCLES: u32 = 379;
pub const NV_CTRL_3D_VISION_PRO_GLASSES_BATTERY_LEVEL: u32 = 380;
pub const NV_CTRL_GVO_ANC_PARITY_COMPUTATION: u32 = 381;
pub const NV_CTRL_GVO_ANC_PARITY_COMPUTATION_AUTO: u32 = 0;
pub const NV_CTRL_GVO_ANC_PARITY_COMPUTATION_ON: u32 = 1;
pub const NV_CTRL_GVO_ANC_PARITY_COMPUTATION_OFF: u32 = 2;
pub const NV_CTRL_3D_VISION_PRO_GLASSES_PAIR_EVENT: u32 = 382;
pub const NV_CTRL_3D_VISION_PRO_GLASSES_UNPAIR_EVENT: u32 = 383;
pub const NV_CTRL_GPU_PCIE_CURRENT_LINK_WIDTH: u32 = 384;
pub const NV_CTRL_GPU_PCIE_CURRENT_LINK_SPEED: u32 = 385;
pub const NV_CTRL_GVO_AUDIO_BLANKING: u32 = 386;
pub const NV_CTRL_GVO_AUDIO_BLANKING_DISABLE: u32 = 0;
pub const NV_CTRL_GVO_AUDIO_BLANKING_ENABLE: u32 = 1;
pub const NV_CTRL_CURRENT_METAMODE_ID: u32 = 387;
pub const NV_CTRL_DISPLAY_ENABLED: u32 = 388;
pub const NV_CTRL_DISPLAY_ENABLED_TRUE: u32 = 1;
pub const NV_CTRL_DISPLAY_ENABLED_FALSE: u32 = 0;
pub const NV_CTRL_FRAMELOCK_INCOMING_HOUSE_SYNC_RATE: u32 = 389;
pub const NV_CTRL_FXAA: u32 = 390;
pub const NV_CTRL_FXAA_DISABLE: u32 = 0;
pub const NV_CTRL_FXAA_ENABLE: u32 = 1;
pub const NV_CTRL_DISPLAY_RANDR_OUTPUT_ID: u32 = 391;
pub const NV_CTRL_FRAMELOCK_DISPLAY_CONFIG: u32 = 392;
pub const NV_CTRL_FRAMELOCK_DISPLAY_CONFIG_DISABLED: u32 = 0;
pub const NV_CTRL_FRAMELOCK_DISPLAY_CONFIG_CLIENT: u32 = 1;
pub const NV_CTRL_FRAMELOCK_DISPLAY_CONFIG_SERVER: u32 = 2;
pub const NV_CTRL_TOTAL_DEDICATED_GPU_MEMORY: u32 = 393;
pub const NV_CTRL_USED_DEDICATED_GPU_MEMORY: u32 = 394;
pub const NV_CTRL_GPU_DOUBLE_PRECISION_BOOST_IMMEDIATE: u32 = 395;
pub const NV_CTRL_GPU_DOUBLE_PRECISION_BOOST_IMMEDIATE_DISABLED: u32 = 0;
pub const NV_CTRL_GPU_DOUBLE_PRECISION_BOOST_IMMEDIATE_ENABLED: u32 = 1;
pub const NV_CTRL_GPU_DOUBLE_PRECISION_BOOST_REBOOT: u32 = 396;
pub const NV_CTRL_GPU_DOUBLE_PRECISION_BOOST_REBOOT_DISABLED: u32 = 0;
pub const NV_CTRL_GPU_DOUBLE_PRECISION_BOOST_REBOOT_ENALED: u32 = 1;
pub const NV_CTRL_DPY_HDMI_3D: u32 = 397;
pub const NV_CTRL_DPY_HDMI_3D_DISABLED: u32 = 0;
pub const NV_CTRL_DPY_HDMI_3D_ENABLED: u32 = 1;
pub const NV_CTRL_BASE_MOSAIC: u32 = 398;
pub const NV_CTRL_BASE_MOSAIC_DISABLED: u32 = 0;
pub const NV_CTRL_BASE_MOSAIC_FULL: u32 = 1;
pub const NV_CTRL_BASE_MOSAIC_LIMITED: u32 = 2;
pub const NV_CTRL_MULTIGPU_MASTER_POSSIBLE: u32 = 399;
pub const NV_CTRL_MULTIGPU_MASTER_POSSIBLE_FALSE: u32 = 0;
pub const NV_CTRL_MULTIGPU_MASTER_POSSIBLE_TRUE: u32 = 1;
pub const NV_CTRL_GPU_POWER_MIZER_DEFAULT_MODE: u32 = 400;
pub const NV_CTRL_XV_SYNC_TO_DISPLAY_ID: u32 = 401;
pub const NV_CTRL_XV_SYNC_TO_DISPLAY_ID_AUTO: u32 = 4294967295;
pub const NV_CTRL_BACKLIGHT_BRIGHTNESS: u32 = 402;
pub const NV_CTRL_GPU_LOGO_BRIGHTNESS: u32 = 403;
pub const NV_CTRL_GPU_SLI_LOGO_BRIGHTNESS: u32 = 404;
pub const NV_CTRL_THERMAL_COOLER_SPEED: u32 = 405;
pub const NV_CTRL_PALETTE_UPDATE_EVENT: u32 = 406;
pub const NV_CTRL_VIDEO_ENCODER_UTILIZATION: u32 = 407;
pub const NV_CTRL_VRR_ALLOWED: u32 = 408;
pub const NV_CTRL_VRR_ALLOWED_FALSE: u32 = 0;
pub const NV_CTRL_VRR_ALLOWED_TRUE: u32 = 1;
pub const NV_CTRL_GSYNC_ALLOWED: u32 = 408;
pub const NV_CTRL_GSYNC_ALLOWED_FALSE: u32 = 0;
pub const NV_CTRL_GSYNC_ALLOWED_TRUE: u32 = 1;
pub const NV_CTRL_GPU_NVCLOCK_OFFSET: u32 = 409;
pub const NV_CTRL_GPU_MEM_TRANSFER_RATE_OFFSET: u32 = 410;
pub const NV_CTRL_VIDEO_DECODER_UTILIZATION: u32 = 411;
pub const NV_CTRL_GPU_OVER_VOLTAGE_OFFSET: u32 = 412;
pub const NV_CTRL_GPU_CURRENT_CORE_VOLTAGE: u32 = 413;
pub const NV_CTRL_CURRENT_COLOR_SPACE: u32 = 414;
pub const NV_CTRL_CURRENT_COLOR_SPACE_RGB: u32 = 0;
pub const NV_CTRL_CURRENT_COLOR_SPACE_YCbCr422: u32 = 1;
pub const NV_CTRL_CURRENT_COLOR_SPACE_YCbCr444: u32 = 2;
pub const NV_CTRL_CURRENT_COLOR_SPACE_YCbCr420: u32 = 3;
pub const NV_CTRL_CURRENT_COLOR_RANGE: u32 = 415;
pub const NV_CTRL_CURRENT_COLOR_RANGE_FULL: u32 = 0;
pub const NV_CTRL_CURRENT_COLOR_RANGE_LIMITED: u32 = 1;
pub const NV_CTRL_SHOW_VRR_VISUAL_INDICATOR: u32 = 416;
pub const NV_CTRL_SHOW_VRR_VISUAL_INDICATOR_FALSE: u32 = 0;
pub const NV_CTRL_SHOW_VRR_VISUAL_INDICATOR_TRUE: u32 = 1;
pub const NV_CTRL_SHOW_GSYNC_VISUAL_INDICATOR: u32 = 416;
pub const NV_CTRL_SHOW_GSYNC_VISUAL_INDICATOR_FALSE: u32 = 0;
pub const NV_CTRL_SHOW_GSYNC_VISUAL_INDICATOR_TRUE: u32 = 1;
pub const NV_CTRL_THERMAL_COOLER_CURRENT_LEVEL: u32 = 417;
pub const NV_CTRL_STEREO_SWAP_MODE: u32 = 418;
pub const NV_CTRL_STEREO_SWAP_MODE_APPLICATION_CONTROL: u32 = 0;
pub const NV_CTRL_STEREO_SWAP_MODE_PER_EYE: u32 = 1;
pub const NV_CTRL_STEREO_SWAP_MODE_PER_EYE_PAIR: u32 = 2;
pub const NV_CTRL_CURRENT_XV_SYNC_TO_DISPLAY_ID: u32 = 419;
pub const NV_CTRL_GPU_FRAMELOCK_FIRMWARE_UNSUPPORTED: u32 = 420;
pub const NV_CTRL_GPU_FRAMELOCK_FIRMWARE_UNSUPPORTED_FALSE: u32 = 0;
pub const NV_CTRL_GPU_FRAMELOCK_FIRMWARE_UNSUPPORTED_TRUE: u32 = 1;
pub const NV_CTRL_DISPLAYPORT_CONNECTOR_TYPE: u32 = 421;
pub const NV_CTRL_DISPLAYPORT_CONNECTOR_TYPE_UNKNOWN: u32 = 0;
pub const NV_CTRL_DISPLAYPORT_CONNECTOR_TYPE_DISPLAYPORT: u32 = 1;
pub const NV_CTRL_DISPLAYPORT_CONNECTOR_TYPE_HDMI: u32 = 2;
pub const NV_CTRL_DISPLAYPORT_CONNECTOR_TYPE_DVI: u32 = 3;
pub const NV_CTRL_DISPLAYPORT_CONNECTOR_TYPE_VGA: u32 = 4;
pub const NV_CTRL_DISPLAYPORT_IS_MULTISTREAM: u32 = 422;
pub const NV_CTRL_DISPLAYPORT_SINK_IS_AUDIO_CAPABLE: u32 = 423;
pub const NV_CTRL_GPU_NVCLOCK_OFFSET_ALL_PERFORMANCE_LEVELS: u32 = 424;
pub const NV_CTRL_GPU_MEM_TRANSFER_RATE_OFFSET_ALL_PERFORMANCE_LEVELS: u32 = 425;
pub const NV_CTRL_FRAMELOCK_FIRMWARE_VERSION: u32 = 426;
pub const NV_CTRL_FRAMELOCK_FIRMWARE_MINOR_VERSION: u32 = 427;
pub const NV_CTRL_SHOW_GRAPHICS_VISUAL_INDICATOR: u32 = 428;
pub const NV_CTRL_SHOW_GRAPHICS_VISUAL_INDICATOR_FALSE: u32 = 0;
pub const NV_CTRL_SHOW_GRAPHICS_VISUAL_INDICATOR_TRUE: u32 = 1;
pub const NV_CTRL_DISPLAY_VRR_MODE: u32 = 429;
pub const NV_CTRL_DISPLAY_VRR_MODE_NONE: u32 = 0;
pub const NV_CTRL_DISPLAY_VRR_MODE_GSYNC: u32 = 1;
pub const NV_CTRL_DISPLAY_VRR_MODE_GSYNC_COMPATIBLE: u32 = 2;
pub const NV_CTRL_DISPLAY_VRR_MODE_GSYNC_COMPATIBLE_UNVALIDATED: u32 = 3;
pub const NV_CTRL_DISPLAY_VRR_MIN_REFRESH_RATE: u32 = 430;
pub const NV_CTRL_DISPLAY_VRR_ENABLED: u32 = 431;
pub const NV_CTRL_DISPLAY_VRR_ENABLED_FALSE: u32 = 0;
pub const NV_CTRL_DISPLAY_VRR_ENABLED_TRUE: u32 = 1;
pub const NV_CTRL_GPU_SHUTDOWN_THRESHOLD: u32 = 432;
pub const NV_CTRL_GPU_MAX_OPERATING_THRESHOLD: u32 = 433;
pub const NV_CTRL_LAST_ATTRIBUTE: u32 = 433;
pub const NV_CTRL_STRING_PRODUCT_NAME: u32 = 0;
pub const NV_CTRL_STRING_VBIOS_VERSION: u32 = 1;
pub const NV_CTRL_STRING_NVIDIA_DRIVER_VERSION: u32 = 3;
pub const NV_CTRL_STRING_DISPLAY_DEVICE_NAME: u32 = 4;
pub const NV_CTRL_STRING_TV_ENCODER_NAME: u32 = 5;
pub const NV_CTRL_STRING_GVIO_FIRMWARE_VERSION: u32 = 8;
pub const NV_CTRL_STRING_GVO_FIRMWARE_VERSION: u32 = 8;
pub const NV_CTRL_STRING_CURRENT_MODELINE: u32 = 9;
pub const NV_CTRL_STRING_ADD_MODELINE: u32 = 10;
pub const NV_CTRL_STRING_DELETE_MODELINE: u32 = 11;
pub const NV_CTRL_STRING_CURRENT_METAMODE: u32 = 12;
pub const NV_CTRL_STRING_CURRENT_METAMODE_VERSION_1: u32 = 12;
pub const NV_CTRL_STRING_ADD_METAMODE: u32 = 13;
pub const NV_CTRL_STRING_DELETE_METAMODE: u32 = 14;
pub const NV_CTRL_STRING_VCSC_PRODUCT_NAME: u32 = 15;
pub const NV_CTRL_STRING_VCSC_PRODUCT_ID: u32 = 16;
pub const NV_CTRL_STRING_VCSC_SERIAL_NUMBER: u32 = 17;
pub const NV_CTRL_STRING_VCSC_BUILD_DATE: u32 = 18;
pub const NV_CTRL_STRING_VCSC_FIRMWARE_VERSION: u32 = 19;
pub const NV_CTRL_STRING_VCSC_FIRMWARE_REVISION: u32 = 20;
pub const NV_CTRL_STRING_VCSC_HARDWARE_VERSION: u32 = 21;
pub const NV_CTRL_STRING_VCSC_HARDWARE_REVISION: u32 = 22;
pub const NV_CTRL_STRING_MOVE_METAMODE: u32 = 23;
pub const NV_CTRL_STRING_VALID_HORIZ_SYNC_RANGES: u32 = 24;
pub const NV_CTRL_STRING_VALID_VERT_REFRESH_RANGES: u32 = 25;
pub const NV_CTRL_STRING_SCREEN_RECTANGLE: u32 = 26;
pub const NV_CTRL_STRING_XINERAMA_SCREEN_INFO: u32 = 26;
pub const NV_CTRL_STRING_NVIDIA_XINERAMA_INFO_ORDER: u32 = 27;
pub const NV_CTRL_STRING_TWINVIEW_XINERAMA_INFO_ORDER: u32 = 27;
pub const NV_CTRL_STRING_SLI_MODE: u32 = 28;
pub const NV_CTRL_STRING_PERFORMANCE_MODES: u32 = 29;
pub const NV_CTRL_STRING_VCSC_FAN_STATUS: u32 = 30;
pub const NV_CTRL_STRING_VCSC_TEMPERATURES: u32 = 31;
pub const NV_CTRL_STRING_VCSC_PSU_INFO: u32 = 32;
pub const NV_CTRL_STRING_GVIO_VIDEO_FORMAT_NAME: u32 = 33;
pub const NV_CTRL_STRING_GVO_VIDEO_FORMAT_NAME: u32 = 33;
pub const NV_CTRL_STRING_GPU_CURRENT_CLOCK_FREQS: u32 = 34;
pub const NV_CTRL_STRING_3D_VISION_PRO_TRANSCEIVER_HARDWARE_REVISION: u32 = 35;
pub const NV_CTRL_STRING_3D_VISION_PRO_TRANSCEIVER_FIRMWARE_VERSION_A: u32 = 36;
pub const NV_CTRL_STRING_3D_VISION_PRO_TRANSCEIVER_FIRMWARE_DATE_A: u32 = 37;
pub const NV_CTRL_STRING_3D_VISION_PRO_TRANSCEIVER_FIRMWARE_VERSION_B: u32 = 38;
pub const NV_CTRL_STRING_3D_VISION_PRO_TRANSCEIVER_FIRMWARE_DATE_B: u32 = 39;
pub const NV_CTRL_STRING_3D_VISION_PRO_TRANSCEIVER_ADDRESS: u32 = 40;
pub const NV_CTRL_STRING_3D_VISION_PRO_GLASSES_FIRMWARE_VERSION_A: u32 = 41;
pub const NV_CTRL_STRING_3D_VISION_PRO_GLASSES_FIRMWARE_DATE_A: u32 = 42;
pub const NV_CTRL_STRING_3D_VISION_PRO_GLASSES_ADDRESS: u32 = 43;
pub const NV_CTRL_STRING_3D_VISION_PRO_GLASSES_NAME: u32 = 44;
pub const NV_CTRL_STRING_CURRENT_METAMODE_VERSION_2: u32 = 45;
pub const NV_CTRL_STRING_DISPLAY_NAME_TYPE_BASENAME: u32 = 46;
pub const NV_CTRL_STRING_DISPLAY_NAME_TYPE_ID: u32 = 47;
pub const NV_CTRL_STRING_DISPLAY_NAME_DP_GUID: u32 = 48;
pub const NV_CTRL_STRING_DISPLAY_NAME_EDID_HASH: u32 = 49;
pub const NV_CTRL_STRING_DISPLAY_NAME_TARGET_INDEX: u32 = 50;
pub const NV_CTRL_STRING_DISPLAY_NAME_RANDR: u32 = 51;
pub const NV_CTRL_STRING_GPU_UUID: u32 = 52;
pub const NV_CTRL_STRING_GPU_UTILIZATION: u32 = 53;
pub const NV_CTRL_STRING_MULTIGPU_MODE: u32 = 54;
pub const NV_CTRL_STRING_PRIME_OUTPUTS_DATA: u32 = 55;
pub const NV_CTRL_STRING_LAST_ATTRIBUTE: u32 = 55;
pub const NV_CTRL_BINARY_DATA_EDID: u32 = 0;
pub const NV_CTRL_BINARY_DATA_MODELINES: u32 = 1;
pub const NV_CTRL_BINARY_DATA_METAMODES: u32 = 2;
pub const NV_CTRL_BINARY_DATA_METAMODES_VERSION_1: u32 = 2;
pub const NV_CTRL_BINARY_DATA_XSCREENS_USING_GPU: u32 = 3;
pub const NV_CTRL_BINARY_DATA_GPUS_USED_BY_XSCREEN: u32 = 4;
pub const NV_CTRL_BINARY_DATA_GPUS_USING_FRAMELOCK: u32 = 5;
pub const NV_CTRL_BINARY_DATA_DISPLAY_VIEWPORT: u32 = 6;
pub const NV_CTRL_BINARY_DATA_FRAMELOCKS_USED_BY_GPU: u32 = 7;
pub const NV_CTRL_BINARY_DATA_GPUS_USING_VCSC: u32 = 8;
pub const NV_CTRL_BINARY_DATA_VCSCS_USED_BY_GPU: u32 = 9;
pub const NV_CTRL_BINARY_DATA_COOLERS_USED_BY_GPU: u32 = 10;
pub const NV_CTRL_BINARY_DATA_GPUS_USED_BY_LOGICAL_XSCREEN: u32 = 11;
pub const NV_CTRL_BINARY_DATA_THERMAL_SENSORS_USED_BY_GPU: u32 = 12;
pub const NV_CTRL_BINARY_DATA_GLASSES_PAIRED_TO_3D_VISION_PRO_TRANSCEIVER: u32 = 13;
pub const NV_CTRL_BINARY_DATA_DISPLAY_TARGETS: u32 = 14;
pub const NV_CTRL_BINARY_DATA_DISPLAYS_CONNECTED_TO_GPU: u32 = 15;
pub const NV_CTRL_BINARY_DATA_METAMODES_VERSION_2: u32 = 16;
pub const NV_CTRL_BINARY_DATA_DISPLAYS_ENABLED_ON_XSCREEN: u32 = 17;
pub const NV_CTRL_BINARY_DATA_DISPLAYS_ASSIGNED_TO_XSCREEN: u32 = 18;
pub const NV_CTRL_BINARY_DATA_GPU_FLAGS: u32 = 19;
pub const NV_CTRL_BINARY_DATA_GPU_FLAGS_STEREO_DISPLAY_TRANSFORM_EXCLUSIVE: u32 = 0;
pub const NV_CTRL_BINARY_DATA_GPU_FLAGS_OVERLAY_DISPLAY_TRANSFORM_EXCLUSIVE: u32 = 1;
pub const NV_CTRL_BINARY_DATA_GPU_FLAGS_DEPTH_8_DISPLAY_TRANSFORM_EXCLUSIVE: u32 = 2;
pub const NV_CTRL_BINARY_DATA_DISPLAYS_ON_GPU: u32 = 20;
pub const NV_CTRL_BINARY_DATA_LAST_ATTRIBUTE: u32 = 20;
pub const NV_CTRL_STRING_OPERATION_ADD_METAMODE: u32 = 0;
pub const NV_CTRL_STRING_OPERATION_GTF_MODELINE: u32 = 1;
pub const NV_CTRL_STRING_OPERATION_CVT_MODELINE: u32 = 2;
pub const NV_CTRL_STRING_OPERATION_BUILD_MODEPOOL: u32 = 3;
pub const NV_CTRL_STRING_OPERATION_GVI_CONFIGURE_STREAMS: u32 = 4;
pub const NV_CTRL_STRING_OPERATION_PARSE_METAMODE: u32 = 5;
pub const NV_CTRL_STRING_OPERATION_LAST_ATTRIBUTE: u32 = 5;
pub const NV_CTRL_WARP_DATA_TYPE_BLEND_OR_OFFSET_TEXTURE: u32 = 0;
pub const NV_CTRL_WARP_DATA_TYPE_MESH_TRIANGLESTRIP_XYUVRQ: u32 = 1;
pub const NV_CTRL_WARP_DATA_TYPE_MESH_TRIANGLES_XYUVRQ: u32 = 2;
pub type __int64_t = ::std::os::raw::c_long;
pub type XID = ::std::os::raw::c_ulong;
pub type Pixmap = XID;
type Display = x11::xlib::Display;

#[repr(C)]
#[derive(Copy, Clone)]
pub struct _NVCTRLAttributeValidValues {
    pub type_: ::std::os::raw::c_int,
    pub u: _NVCTRLAttributeValidValues__bindgen_ty_1,
    pub permissions: ::std::os::raw::c_uint,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union _NVCTRLAttributeValidValues__bindgen_ty_1 {
    pub range: _NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1,
    pub bits: _NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_2,
    _bindgen_union_align: [u64; 2usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1 {
    pub min: i64,
    pub max: i64,
}
#[test]
fn bindgen_test_layout__NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1>(),
        16usize,
        concat!(
            "Size of: ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1>())).min
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1),
            "::",
            stringify!(min)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1>())).max
                as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_1),
            "::",
            stringify!(max)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_2 {
    pub ints: ::std::os::raw::c_uint,
}
#[test]
fn bindgen_test_layout__NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_2() {
    assert_eq!(
        ::std::mem::size_of::<_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_2>(),
        4usize,
        concat!(
            "Size of: ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_2)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_2>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_2>())).ints
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1__bindgen_ty_2),
            "::",
            stringify!(ints)
        )
    );
}
#[test]
fn bindgen_test_layout__NVCTRLAttributeValidValues__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<_NVCTRLAttributeValidValues__bindgen_ty_1>(),
        16usize,
        concat!(
            "Size of: ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<_NVCTRLAttributeValidValues__bindgen_ty_1>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_NVCTRLAttributeValidValues__bindgen_ty_1>())).range as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1),
            "::",
            stringify!(range)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_NVCTRLAttributeValidValues__bindgen_ty_1>())).bits as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_NVCTRLAttributeValidValues__bindgen_ty_1),
            "::",
            stringify!(bits)
        )
    );
}
#[test]
fn bindgen_test_layout__NVCTRLAttributeValidValues() {
    assert_eq!(
        ::std::mem::size_of::<_NVCTRLAttributeValidValues>(),
        32usize,
        concat!("Size of: ", stringify!(_NVCTRLAttributeValidValues))
    );
    assert_eq!(
        ::std::mem::align_of::<_NVCTRLAttributeValidValues>(),
        8usize,
        concat!("Alignment of ", stringify!(_NVCTRLAttributeValidValues))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_NVCTRLAttributeValidValues>())).type_ as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_NVCTRLAttributeValidValues),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_NVCTRLAttributeValidValues>())).u as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_NVCTRLAttributeValidValues),
            "::",
            stringify!(u)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_NVCTRLAttributeValidValues>())).permissions as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(_NVCTRLAttributeValidValues),
            "::",
            stringify!(permissions)
        )
    );
}
pub type NVCTRLAttributeValidValuesRec = _NVCTRLAttributeValidValues;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _NVCTRLAttributePermissions {
    pub type_: ::std::os::raw::c_int,
    pub permissions: ::std::os::raw::c_uint,
}
#[test]
fn bindgen_test_layout__NVCTRLAttributePermissions() {
    assert_eq!(
        ::std::mem::size_of::<_NVCTRLAttributePermissions>(),
        8usize,
        concat!("Size of: ", stringify!(_NVCTRLAttributePermissions))
    );
    assert_eq!(
        ::std::mem::align_of::<_NVCTRLAttributePermissions>(),
        4usize,
        concat!("Alignment of ", stringify!(_NVCTRLAttributePermissions))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_NVCTRLAttributePermissions>())).type_ as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_NVCTRLAttributePermissions),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_NVCTRLAttributePermissions>())).permissions as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_NVCTRLAttributePermissions),
            "::",
            stringify!(permissions)
        )
    );
}
pub type NVCTRLAttributePermissionsRec = _NVCTRLAttributePermissions;
extern "C" {
    pub fn XNVCTRLQueryExtension(
        dpy: *mut Display,
        event_basep: *mut ::std::os::raw::c_int,
        error_basep: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryVersion(
        dpy: *mut Display,
        major: *mut ::std::os::raw::c_int,
        minor: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLIsNvScreen(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryTargetCount(
        dpy: *mut Display,
        target_type: ::std::os::raw::c_int,
        value: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLSetAttribute(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn XNVCTRLSetTargetAttribute(
        dpy: *mut Display,
        target_type: ::std::os::raw::c_int,
        target_id: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        value: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn XNVCTRLSetAttributeAndGetStatus(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        value: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLSetTargetAttributeAndGetStatus(
        dpy: *mut Display,
        target_type: ::std::os::raw::c_int,
        target_id: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        value: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryAttribute(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        value: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryTargetAttribute(
        dpy: *mut Display,
        target_Type: ::std::os::raw::c_int,
        target_id: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        value: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryTargetAttribute64(
        dpy: *mut Display,
        target_Type: ::std::os::raw::c_int,
        target_id: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        value: *mut i64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryStringAttribute(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        ptr: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryTargetStringAttribute(
        dpy: *mut Display,
        target_type: ::std::os::raw::c_int,
        target_id: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        ptr: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLSetStringAttribute(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        ptr: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLSetTargetStringAttribute(
        dpy: *mut Display,
        target_type: ::std::os::raw::c_int,
        target_id: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        ptr: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryValidAttributeValues(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        values: *mut NVCTRLAttributeValidValuesRec,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryValidTargetAttributeValues(
        dpy: *mut Display,
        target_type: ::std::os::raw::c_int,
        target_id: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        values: *mut NVCTRLAttributeValidValuesRec,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryValidTargetStringAttributeValues(
        dpy: *mut Display,
        target_type: ::std::os::raw::c_int,
        target_id: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        values: *mut NVCTRLAttributeValidValuesRec,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryAttributePermissions(
        dpy: *mut Display,
        attribute: ::std::os::raw::c_uint,
        permissions: *mut NVCTRLAttributePermissionsRec,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryStringAttributePermissions(
        dpy: *mut Display,
        attribute: ::std::os::raw::c_uint,
        permissions: *mut NVCTRLAttributePermissionsRec,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryBinaryDataAttributePermissions(
        dpy: *mut Display,
        attribute: ::std::os::raw::c_uint,
        permissions: *mut NVCTRLAttributePermissionsRec,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryStringOperationAttributePermissions(
        dpy: *mut Display,
        attribute: ::std::os::raw::c_uint,
        permissions: *mut NVCTRLAttributePermissionsRec,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLSetGvoColorConversion(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
        colorMatrix: *mut [f32; 3usize],
        colorOffset: *mut f32,
        colorScale: *mut f32,
    );
}
extern "C" {
    pub fn XNVCTRLQueryGvoColorConversion(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
        colorMatrix: *mut [f32; 3usize],
        colorOffset: *mut f32,
        colorScale: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryBinaryData(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        ptr: *mut *mut ::std::os::raw::c_uchar,
        len: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLQueryTargetBinaryData(
        dpy: *mut Display,
        target_type: ::std::os::raw::c_int,
        target_id: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        ptr: *mut *mut ::std::os::raw::c_uchar,
        len: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLStringOperation(
        dpy: *mut Display,
        target_type: ::std::os::raw::c_int,
        target_id: ::std::os::raw::c_int,
        display_mask: ::std::os::raw::c_uint,
        attribute: ::std::os::raw::c_uint,
        pIn: *const ::std::os::raw::c_char,
        ppOut: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn XNVCTRLBindWarpPixmapName(
        dpy: *mut Display,
        screen: ::std::os::raw::c_int,
        pixmap_id: Pixmap,
        name: *const ::std::os::raw::c_char,
        dataType: ::std::os::raw::c_uint,
        vertexCount: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
